export ZSH="${HOME}/.oh-my-zsh"
ZSH_THEME="robbyrussell"
plugins=(fzf)
source $ZSH/oh-my-zsh.sh

export EDITOR=nvim
bindkey -v

export PATH=${HOME}/local/bin:${PATH}
export PATH="/opt/homebrew/opt/ruby/bin:$PATH"
export PATH="/Users/ywchoi/Library/Python/3.11/bin:${PATH}"
export LD_LIBRARY_PATH=${HOME}/local/lib:${LD_LIBRARY_PATH}
export LD_LIBRARY_PATH=${HOME}/local/lib64:${LD_LIBRARY_PATH}

# common aliases
alias ls='ls -G'
alias l='ls -l'
alias lsr='ls -l --sort=date'
alias python=python3
alias py=python3
alias pip=pip3
alias vi=nvim
alias vim=nvim

# fzf configs
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

export FZF_CMD="fzf"
export FZF_DEFAULT_OPTS="--height 40% --layout=reverse --keep-right"
export FZF_DEFAULT_COMMAND="fd --type f --follow"
export FZF_PREVIEW_DIR='fd . {} --max-depth 1 --color always --max-results 50'
export FZF_CTRL_T_COMMAND="fd --follow -I"

__fsel_git() {
  if git rev-parse --show-toplevel >& /dev/null; then
    local cmd="fd --follow -I . $(git rev-parse --show-toplevel)"
  else 
    local cmd=${FZF_CTRL_T_COMMAND}
  fi
  setopt localoptions pipefail no_aliases 2> /dev/null
  local item
  eval "$cmd" | FZF_DEFAULT_OPTS="--height ${FZF_TMUX_HEIGHT:-40%} --reverse --bind=ctrl-z:ignore ${FZF_DEFAULT_OPTS-} ${FZF_CTRL_P_OPTS-}" $(__fzfcmd) -m "$@" | while read item; do
    echo -n "${(q)item} "
  done
  local ret=$?
  echo
  return $ret
}

fzf-project-file-widget() {
  LBUFFER="${LBUFFER}$(__fsel_git)"
  local ret=$?
  zle reset-prompt
  return $ret
}
zle     -N            fzf-project-file-widget
bindkey -M emacs '^P' fzf-project-file-widget
bindkey -M vicmd '^P' fzf-project-file-widget
bindkey -M viins '^P' fzf-project-file-widget

_fzf_compgen_path() {
  fd -I --hidden --follow --exclude ".git" . "$1"
}

# Use fd to generate the list for directory completion
_fzf_compgen_dir() {
  fd -I --type d --hidden --follow --exclude ".git" . "$1"
}

# z integration (recent dirs)
export _Z_NO_RESOLVE_SYMLINKS=1
source ${HOME}/.z.sh
unalias z 2> /dev/null
# z - cd to recent directory
z() {
  [ $# -gt 0 ] && _z "$*" && return
  cd "$(_z -lt 2>&1 | tac | awk '{print $2}' | ${FZF_CMD})"
}

c() {
  TARGET=$(fd -I --type d --follow | fzf)
  if [ ! -z "$TARGET" ]; then
    cd $TARGET
  fi
}

git config --global alias.root 'rev-parse --show-toplevel'

gl () {
  git --no-pager log --format=format:"%Cgreen %h %Cblue %cd %Creset %s %Cred %d" --date=short $@
}
alias gs="git status -s -uno"
alias gc="git commit -m"
alias ga="git add"
alias gpu="git push origin main"
alias gpl="git pull origin main"

gae() {
  for ext in $@; do
    fd -I -e $ext | xargs git add -f
  done
}

test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"


source /opt/homebrew/opt/chruby/share/chruby/chruby.sh
source /opt/homebrew/opt/chruby/share/chruby/auto.sh
chruby ruby-3.1.3
